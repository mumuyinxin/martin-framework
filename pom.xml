<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.java2e</groupId>
    <artifactId>martin</artifactId>
    <version>1.0.8</version>
    <packaging>pom</packaging>

    <description>Martin微服务开发脚手架</description>
    <url>https://martin.java2e.com</url>
    <organization>
        <name>martin of java2e</name>
        <url>https://www.zerocode.net.cn</url>
    </organization>
    <licenses>
        <license>
            <name>GNU AFFERO GENERAL PUBLIC LICENSE Version 3</name>
            <url>https://www.gnu.org/licenses</url>
        </license>
    </licenses>
    <scm>
        <tag>main</tag>
        <connection>https://github.com/www-zerocode-net-cn/martin-framework.git</connection>
        <developerConnection>https://github.com/www-zerocode-net-cn</developerConnection>
        <url>https://github.com/www-zerocode-net-cn/martin-framework.git</url>
    </scm>

    <developers>
        <developer>
            <id>martin</id>
            <name>martin</name>
            <email>martin114@foxmail.com</email>
            <organization>martin of java2e</organization>
            <organizationUrl>https://www.zerocode.net.cn</organizationUrl>
            <roles>
                <role>Project lead</role>
            </roles>
        </developer>
    </developers>

    <modules>
        <module>martin-common</module>
        <module>martin-cloud</module>
        <module>martin-biz</module>
        <module>martin-extension</module>
        <module>martin-spring-boot-starter</module>
    </modules>

    <properties>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR8</spring-cloud.version>
        <spring-platform.version>Cairo-SR7</spring-platform.version>
        <spring-cloud-alibaba-dependencies>2.2.3.RELEASE</spring-cloud-alibaba-dependencies>
        <java.version>1.8</java.version>
        <resource.delimiter>@</resource.delimiter>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.encoding>${project.build.sourceEncoding}</maven.compiler.encoding>
        <file-extension>yml</file-extension>
        <docker.url>http://192.168.227.133:2375</docker.url>
        <docker.repostory>192.168.227.133</docker.repostory>
        <docker.registry.name>martin</docker.registry.name>
        <proguard.version>7.2.1</proguard.version>
        <proguard-maven-plugin.version>2.5.3</proguard-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.java2e</groupId>
                <artifactId>martin-common-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>${spring-platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- provider=true支持使用容器自己的lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>


        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${maven.compiler.target}</source>
                    <target>${maven.compiler.source}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!--proguard混淆插件-->
      <!--      <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        &lt;!&ndash; 打包的时候开始混淆&ndash;&gt;
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <injar>classes</injar>
                    <injarNotExistsSkip>true</injarNotExistsSkip>
                    &lt;!&ndash;输出的jar&ndash;&gt;
                    <outjar>${project.build.finalName}.jar</outjar>
                    &lt;!&ndash; 是否混淆&ndash;&gt;
                    <obfuscate>true</obfuscate>
                    <options>
                        &lt;!&ndash;指定java版本号&ndash;&gt;
                        <option>-target 1.8</option>
                        &lt;!&ndash;默认开启，不做收缩（删除注释、未被引用代码）&ndash;&gt;
                        <option>-dontshrink</option>
                        &lt;!&ndash;默认是开启的，这里关闭字节码级别的优化&ndash;&gt;
                        <option>-dontoptimize</option>
                        &lt;!&ndash;混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代&ndash;&gt;
                        <option>-adaptclassstrings</option>
                        &lt;!&ndash;忽略警告&ndash;&gt;
                        <option>-ignorewarnings</option>
                        <option>-keep class org.apache.logging.log4j.util.* { *; }</option>
                        <option>-dontwarn org.apache.logging.log4j.util.**</option>
                        &lt;!&ndash;对异常、注解信息在runtime予以保留，不然影响springboot启动&ndash;&gt;
                        <option>-keepattributes
                            Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
                        </option>
                        &lt;!&ndash;保留枚举成员及方法&ndash;&gt;
                        <option>-keepclassmembers enum * { *; }</option>
                        <option>-keepparameternames</option>
                        &lt;!&ndash;打包时候忽略note消息，如果提示那些有问题，那就加入以下note提示的那些类&ndash;&gt;
                        <option>-dontnote org.apache.ibatis.**</option>
                        <option>-dontnote javax.annotation.**</option>
                        <option>-dontnote sun.applet.**</option>
                        <option>-dontnote sun.tools.jar.**</option>
                        <option>-dontnote org.apache.commons.logging.**</option>
                        <option>-dontnote javax.inject.**</option>
                        <option>-dontnote org.aopalliance.intercept.**</option>
                        <option>-dontnote org.aopalliance.aop.**</option>
                        <option>-dontnote org.apache.logging.log4j.**</option>
                        &lt;!&ndash;对主函数不进行混淆处理(否则springboot启动会异常)&ndash;&gt;
                        <option>-keepclasseswithmembers public class * {
                            public static void main(java.lang.String[]);}
                        </option>
                        &lt;!&ndash;入口程序类不能混淆，混淆会导致springboot启动不了&ndash;&gt;
                        <option>-keep class **.*Application</option>
                        <option>-keepclassmembers public class *{void set*(***);*** get*();}</option>
                        &lt;!&ndash;由于使用了mybaits-plus因此entity和mapper不能混淆 *只扫描一层包，**会扫描子级的包内容&ndash;&gt;
                        <option>-keep class com.java2e.martin.common.security.util.** {*;}</option>
                        <option>-keep class com.java2e.martin.common.feign.** {*;}</option>
                        <option>-keep class com.java2e.martin.common.core.** {*;}</option>
                        <option>-keep class com.java2e.**.exception.** {*;}</option>
                        <option>-keep class com.java2e.**.api.** {*;}</option>
                        <option>-keep class com.java2e.**.bean.** {*;}</option>
                        <option>-keep class com.java2e.**.constant.** {*;}</option>
                        <option>-keep class com.java2e.**.entity.** {*;}</option>
                        <option>-keep class com.java2e.**.mapper.** {*;}</option>
                        <option>-keep class com.java2e.**.service.** {*;}</option>
                        <option>-keep class com.java2e.**.dao.* {*;}</option>
                        <option>-keep interface * extends * { *; }</option>
                        &lt;!&ndash;不混淆所有类,保存原始定义的注释&ndash;&gt;
                        <option>-keepclassmembers class * {
                            @org.springframework.beans.factory.annotation.Autowired *;
                            @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <libs>
                        &lt;!&ndash; 添加依赖 java8&ndash;&gt;
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jce.jar</lib>
                    </libs>
                </configuration>
                <dependencies>
                    &lt;!&ndash; https://mvnrepository.com/artifact/net.sf.proguard/proguard-base &ndash;&gt;
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>6.1.1</version>
                    </dependency>
                </dependencies>
            </plugin>-->

            <plugin>
                <groupId>com.github.core-lib</groupId>
                <artifactId>xjar-maven-plugin</artifactId>
                <version>4.0.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <password>ERDOnline.xJar</password>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- 本地开发环境 -->
            <id>dev</id>
            <properties>
                <profiles.active>dev</profiles.active>
            </properties>
            <activation>
                <!-- 设置默认激活这个配置 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- SIT环境 -->
            <id>sit</id>
            <properties>
                <profiles.active>sit</profiles.active>
            </properties>
        </profile>
        <profile>
            <!-- UAT环境 -->
            <id>uat</id>
            <properties>
                <profiles.active>uat</profiles.active>
            </properties>
        </profile>
        <profile>
            <!-- 生产环境 -->
            <id>release</id>
            <properties>
                <profiles.active>release</profiles.active>
            </properties>

        </profile>
    </profiles>

    <!-- 指定阿里云仓库，加快下载速度 -->
    <repositories>
        <repository>
            <id>aliyun</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven</id>
            <name>maven</name>
            <url>http://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!--    <distributionManagement>-->
    <!--        <snapshotRepository>-->
    <!--            <id>ossrh</id>-->
    <!--            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>-->
    <!--        </snapshotRepository>-->
    <!--        <repository>-->
    <!--            <id>ossrh</id>-->
    <!--            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->
    <!--        </repository>-->
    <!--    </distributionManagement>-->
    <!-- omitted xml -->
    <distributionManagement>
        <repository>
            <!--必须与 settings.xml 的 id 一致-->
            <id>erdonline-erd-online-martin</id>
            <name>martin</name>
            <url>https://erdonline-maven.pkg.coding.net/repository/erd-online/martin/</url>
        </repository>
    </distributionManagement>
</project>
